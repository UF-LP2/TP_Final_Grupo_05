///////////////////////////////////////////////////////////
//  cCocimundo.cs
//  Implementation of the Class cCocimundo
//  Generated by Enterprise Architect
//  Created on:      09-nov.-2022 15:59:14
//  Original author: HP
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;

public class cCocimundo {

	public List<cVehiculos> ListaVehiculos;
	public List<cPedidos> ListaPedidos;

	public cCocimundo(){
		ListaPedidos = new List<cPedidos>();
		ListaVehiculos = new List<cVehiculos>();

	}

	~cCocimundo(){

	}
	static int max(int a, int b) //maximo entre 2 numeros
	{
		return (a > b) ? a : b;
	}
	public void AgregarPedido(cPedidos pedido){
		ListaPedidos.Add(pedido);
			}

	public void EliminarPedido(cPedidos pedido)
	{
		ListaPedidos.Remove(pedido);
	}

	public void FinalDelDia(){
		for(int i = 0; i < ListaPedidos.Count(); i++)
        {
			ListaPedidos.ModificarPrioridad();
        }
	}

	/*public cPedido QuitarPedido(){

		return null; 
	}*/
	public int Dinamico_Mochila(cVehiculos vehiculo)
    {
	
		int numpedidos = ListaPedidos.Count();

		int[,] Matriz = new int[numpedidos + 1, ListaVehiculos.Volumen()];
		List<cPedidos> sublistapedidos;
		for (int j = 0; j < numpedidos; j++)
        {
			if (ListaPedidos[j].getPrioridad == "express")
            {
				sublistapedidos.Add(ListaPedidos[j]); // Hago una sublista de los pedidos express
				
            }
        } 
		for (int i = 0; i < sublistapedidos.Count(); i++)
        {
			for (int w = 0; w< ListaVehiculos.Volumen(); w++)//chequear
            {
				if (w == 0 | i == 0)
					Matriz[i][w] = 0;
				else if (sublistapedidos[i - 1] <= w)

					Matriz[i][w] = max(Matriz[i - 1, w - wt[i - 1]], Matriz[i - 1, w]);
				else
					Matriz[i, w] = Matriz[i - 1, w];
            }
        }
		return Matriz[n][W];
	}
}//end cCocimundo